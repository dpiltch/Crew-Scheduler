<?xml version="1.0" encoding="UTF-8"?>
<settings> 
  <type>column</type>                                         
  <data_type>xml</data_type> 
  <text_size></text_size>                                     <!-- [11] (Number) text size of all texts. Every text size can be set individually in the settings below -->
  <text_color>#333333</text_color>
  <decimals_separator>.</decimals_separator>                   
  <thousands_separator>,</thousands_separator>
  <redraw>true</redraw>     
  <add_time_stamp>true</add_time_stamp>
  <depth>0</depth>                                            <!-- [0] (Number) the depth of chart and columns (for 3D effect) -->
  <angle>0</angle>                                            <!-- [30] (0 - 90) angle of chart area and columns (for 3D effect) -->
    
  <column>
    <type></type>                                             <!-- [clustered] (stacked, 100% stacked) -->
    <width>85</width>                                         <!-- [80] (0 - 100) width of column (in percents)  -->
    <spacing>0</spacing>                                      <!-- [5] (Number) space between columns of one category axis value, in pixels. Negative values can be used. -->
    <grow_time>2</grow_time>                                  <!-- [0] (Number) grow time in seconds. Leave 0 to appear instantly -->
    <grow_effect></grow_effect>                               <!-- [elastic] (elastic, regular, strong) -->    
    <alpha></alpha>  							                            <!-- [0] (Number) -->
    <data_labels>
      <![CDATA[]]>                                            <!-- [] ({title} {value} {series} {percents} {start} {difference} {total}) You can format any data label: {title} will be replaced with real title, {value} - with value and so on. You can add your own text or html code too. -->
    </data_labels>
    <data_labels_text_color></data_labels_text_color>         <!-- [text_color] (hex color code) --> 
    <data_labels_text_size></data_labels_text_size>           <!-- [text_size] (Number) -->
    <data_labels_position></data_labels_position>             <!-- [] (inside, outside, above). This setting is only for clustered chart. --> 
                                                              <!-- if you set "above" for column chart, the data label will be displayed inside column, rotated  by 90 degrees -->
    <balloon_text>                                                    
     <![CDATA[]]>                                             <!-- [] ({title} {value} {series} {percents} {start} {difference} {total}) You can format any data label: {title} will be replaced with real title, {value} - with value and so on. You can add your own text or html code too. -->
    </balloon_text>    
    <link_target></link_target>                               <!-- [] (_blank, _top ...) -->
    <gradient>horizontal</gradient>                                     <!-- [vertical] (horizontal / vertical) Direction of column gradient. Gradient colors are defined in graph settings below. -->
    <bullet_offset></bullet_offset>                           <!-- [0] (Number) distance from column / bar to the bullet -->                         
  </column>
    
  <background>                                                <!-- BACKGROUND -->
    <color></color>                                           <!-- [#FFFFFF] (hex color code) Separate color codes with comas for gradient -->
    <alpha></alpha>                                           <!-- [0] (0 - 100) use 0 if you are using custom swf or jpg for background -->
    <border_color></border_color>                             <!-- [#000000] (hex color code) -->
    <border_alpha>15</border_alpha>                           <!-- [0] (0 - 100) -->
    <file></file>                                             <!-- [] (filename) swf or jpg file of a background. Do not use progressive jpg file, it will be not visible with flash player 7 -->
                                                              <!-- The chart will look for this file in amcolumn_path folder (amcolumn_path is set in HTML) -->
  </background>
     
  <plot_area>                                                 <!-- PLOT AREA (the area between axes) -->
    <color></color>                                           <!-- [#FFFFFF](hex color code) Separate color codes with comas for gradient -->
    <alpha></alpha>                                           <!-- [0] (0 - 100) if you want it to be different than background color, use bigger than 0 value -->
    <border_color></border_color>                             <!-- [#000000] (hex color code) -->                                        
    <border_alpha></border_alpha>                             <!-- [0] (0 - 100) -->                                            
    <margins>                                                 <!-- plot area margins -->
      <left>50</left>                                         <!-- [60](Number) --> 
      <top>27</top>                                           <!-- [60](Number) --> 
      <right>20</right>                                       <!-- [60](Number) -->
      <bottom>45</bottom>                                     <!-- [80](Number) -->
    </margins>
  </plot_area>
  
  <grid>                                                      <!-- GRID -->
    <category>                                                <!-- category axis grid -->                                                     
      <color></color>                                         <!-- [#000000] (hex color code) -->
      <alpha>15</alpha>                                        <!-- [15] (0 - 100) -->
      <dashed></dashed>                                       <!-- [false](true / false) -->
      <dash_length></dash_length>                             <!-- [5] (Number) -->  

    </category>
    <value>                                                   <!-- value axis grid -->      
      <color></color>                                         <!-- [#000000] (hex color code) -->
      <alpha>15</alpha>                                        <!-- [15] (0 - 100) -->
      <dashed></dashed>                                       <!-- [false] (true / false) -->
      <dash_length></dash_length>                             <!-- [5] (Number) -->
      <approx_count></approx_count>                           <!-- [10] (Number) approximate number of gridlines -->      
    </value>
  </grid>
  
  <values>                                                    <!-- VALUES -->
    <category>                                                <!-- category axis -->
      <enabled></enabled>                                     <!-- [true] (true / false) -->
      <frequency>2</frequency>                                <!-- [1] (Number) how often values should be placed -->
      <start_from></start_from>                               <!-- [1] (Number) you can set series from which category values will be displayed -->
      <rotate>45</rotate>                                     <!-- [0] (0 - 90) angle of rotation. If you want to rotate by degree from 1 to 89, you must have font.swf file in fonts folder -->      
      <color></color>                                         <!-- [text_color] (hex color code) -->
      <text_size></text_size>                                 <!-- [text_size] (Number) -->    
      <inside></inside>                                       <!-- [false] (true / false) if set to true, axis values will be displayed inside plot area. This setting will not work for values rotated by 1-89 degrees (0 and 90 only) -->      
    </category>
    <value>                                                   <!-- value axis -->
      <enabled>true</enabled>                                 <!-- [true] (true / false) -->
      <reverse></reverse>                                     <!-- [false] (true / false) whether to reverse this axis values or not. If set to true, values will start from biggest number and will end with a smallest number -->    
      <min>0</min>                                            <!-- [] (Number) minimum value of this axis. If empty, this value will be calculated automatically. -->
      <max>7</max>                                             <!-- [] (Number) maximum value of this axis. If empty, this value will be calculated automatically -->
      <strict_min_max></strict_min_max>                       <!-- [false] (true / false) by default, if your values are bigger then defined max (or smaller then defined min), max and min is changed so that all the chart would fit to chart area. If you don't want this, set this option to true. -->
      <frequency></frequency>                                 <!-- [1] (Number) how often values should be placed, 1 - near every gridline, 2 - near every second gridline... -->
      <rotate></rotate>                                       <!-- [0] (0 - 90) angle of rotation. If you want to rotate by degree from 1 to 89, you must have font.swf file in fonts folder -->
      <skip_first></skip_first>                               <!-- [true] (true / false) to skip or not first value -->
      <skip_last></skip_last>                                 <!-- [false] (true / false) to skip or not last value -->
      <color></color>                                         <!-- [text_color] (hex color code) --> 
      <text_size></text_size>                                 <!-- [text_size] (Number) -->
      <unit></unit>                                           <!-- [] (text) -->
      <unit_position></unit_position>                         <!-- [right] (right / left) -->
      <integers_only>true</integers_only>                         <!-- [false] (true / false) if set to true, values with decimals will be omitted -->
      <inside></inside>                                       <!-- [false] (true / false) if set to true, axis values will be displayed inside plot area. This setting will not work for values rotated by 1-89 degrees (0 and 90 only) -->                   
    </value>
  </values>
  
  <axes>                                                      <!-- axes -->
    <category>                                                <!-- category axis -->
      <color></color>                                         <!-- [#000000] (hex color code) -->
      <alpha></alpha>                                         <!-- [100] (0 - 100) -->
      <width>1</width>                                        <!-- [2] (Number) line width, 0 for hairline -->
      <tick_length></tick_length>                             <!-- [7] (Number) -->
    </category>
    <value>                                                   <!-- value axis -->
      <color></color>                                         <!-- [#000000] (hex color code) -->
      <alpha></alpha>                                         <!-- [100] (0 - 100) -->
      <width>1</width>                                        <!-- [2] (Number) line width, 0 for hairline -->
      <tick_length></tick_length>                             <!-- [7] (Number) -->
      <logarithmic></logarithmic>                             <!-- [false] (true / false) If set to true, this axis will use logarithmic scale instead of linear -->
    </value>
  </axes>  
  
  <balloon>                                                   <!-- BALLOON -->
    <enabled>true</enabled>                                       <!-- [true] (true / false) -->
    <color></color>                                           <!-- [] (hex color code) balloon background color. If empty, slightly darker then current column color will be used -->
    <alpha></alpha>                                           <!-- [100] (0 - 100) -->
    <text_color></text_color>                                 <!-- [#FFFFFF] (hex color code) -->
    <text_size></text_size>                                   <!-- [text_size] (Number) -->    
  </balloon>
  <legend>                                                    <!-- LEGEND -->
    <enabled>false</enabled>
	</legend>
  <error_messages>                                            <!-- "error_messages" settings will be applied for all error messages except the one which is showed if settings file wasn't found -->
    <enabled></enabled>                                       <!-- [true] (true / false) -->
    <x></x>                                                   <!-- [] (Number / Number% / !Number) x position of error message. If not set, will be aligned to the center -->
    <y></y>                                                   <!-- [] (Number / Number% / !Number) y position of error message. If not set, will be aligned to the center -->
    <color></color>                                           <!-- [#BBBB00] (hex color code) background color of error message. Separate color codes with comas for gradient -->
    <alpha></alpha>                                           <!-- [100] (0 - 100) background alpha -->
    <text_color></text_color>                                 <!-- [#FFFFFF] (hex color code) -->
    <text_size></text_size>                                   <!-- [text_size] (Number) -->
  </error_messages>    
  
  <strings>
    <no_data>No Data</no_data>                                       <!-- [No data for selected period] (text) if data is missing, this message will be displayed -->
    <export_as_image></export_as_image>                       <!-- [Export as image] (text) text for right click menu -->
    <collecting_data></collecting_data>                       <!-- [Collecting data] (text) this text is displayed while exporting chart to an image -->
  </strings>  

  
  <context_menu> 
     <default_items>
       <zoom>true</zoom> 
       <print>true</print> 
     </default_items>
  </context_menu>  
	
</settings>
